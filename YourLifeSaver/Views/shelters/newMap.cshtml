@{
    ViewBag.Title = "newMap";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<head>
    <meta charset="utf-8" />
    <title>Store Locator</title>
    <meta name="robots" content="noindex, nofollow" />
    <meta name="viewport"
          content="initial-scale=1,maximum-scale=1,user-scalable=no" />
    <link href="https://fonts.googleapis.com/css?family=Source+Sans+Pro:400,700"
          rel="stylesheet" />
    <script src="https://api.tiles.mapbox.com/mapbox-gl-js/v1.12.0/mapbox-gl.js"></script>
    <link href="https://api.tiles.mapbox.com/mapbox-gl-js/v1.12.0/mapbox-gl.css"
          rel="stylesheet" />

</head>
<section class="features section-bg">

    <div class="container">
        <div class="section-title">
            <p data-aos="fade-in" style="text-align:left"><a href="~/Home">Home</a>&nbsp >> Find a shelter</p>
            <br />
            <h2 data-aos="fade-in">Find a shelter</h2>
        </div>
        <div class="row">
            <div mb-4 mb-lg-0 col-lg-4 order-lg-2>
                <div class="sidebar pad2">
                    <div class="heading">
                        <h2>Shelters</h2>
                    </div>
                    <div id="listings" class="listings"></div>
                </div>
            </div>
            <div class="mb-4 mb-lg-0 col-lg-8 order-lg-2" style="min-height:550px">
                <div id="map" class="map pad2 mapboxgl-map" style="width:100%;min-height:550px"></div>
            </div>
        </div>
    </div>
</section>


<style>
    /* Marker tweaks */
    .mapboxgl-popup {
        padding-bottom: 50px;
    }

    .mapboxgl-popup-close-button {
        display: none;
    }

    .mapboxgl-popup-content {
        font: 400 15px/22px 'Source Sans Pro', 'Helvetica Neue', Sans-serif;
        padding: 0;
        width: 180px;
    }

    .mapboxgl-popup-content-wrapper {
        padding: 1%;
    }

    .mapboxgl-popup-content h3 {
        background: #91c949;
        color: #fff;
        margin: 0;
        display: block;
        padding: 10px;
        border-radius: 3px 3px 0 0;
        font-weight: 700;
        margin-top: -15px;
    }

    .mapboxgl-popup-content h4 {
        margin: 0;
        display: block;
        padding: 10px 10px 10px 10px;
        font-weight: 400;
    }

    .mapboxgl-popup-content div {
        padding: 10px;
    }

    .mapboxgl-container .leaflet-marker-icon {
        cursor: pointer;
    }

    .mapboxgl-popup-anchor-top > .mapboxgl-popup-content {
        margin-top: 15px;
    }

    .mapboxgl-popup-anchor-top > .mapboxgl-popup-tip {
        border-bottom-color: #91c949;
    }

    .mapboxgl-ctrl-geocoder {
        border: 2px solid #00853e;
        border-radius: 0;
        position: relative;
        top: 0;
        width: 800px;
        margin-top: 0;
        border: 0;
    }

        .mapboxgl-ctrl-geocoder > div {
            min-width: 100%;
            margin-left: 0;
        }
</style>

<script>
    /* This will let you use the .remove() function later on */
    if (!('remove' in Element.prototype)) {
        Element.prototype.remove = function () {
            if (this.parentNode) {
                this.parentNode.removeChild(this);
            }
        };
    }

    mapboxgl.accessToken = 'pk.eyJ1IjoibWlzYWthZXJ1IiwiYSI6ImNrZ2RoOGFqcjAxcTMycm5wYzFhNWpqYWgifQ.Wr9fWRrTVVBznaTfuA0wfQ';

    /**
     * Add the map to the page
    */
    var map = new mapboxgl.Map({
        container: 'map',
        style: 'mapbox://styles/mapbox/streets-v11',
        center: [144.972, -37.820],
        zoom: 13,
        scrollZoom: true
    });

    var stores = {
        "type": "FeatureCollection",
        "features": [
            {
                "type": "Feature",
                "geometry": {
                    "type": "Point",
                    "coordinates": [144.967553, -37.817291]
                },
                "properties": {
                    "phoneFormatted": "",
                    "phone": "",
                    "address": "614/AMP Youth Bus",
                    "crossStreet": "Bus located corner Swanston and Flinders Streets - Mobile service please check provider's website for updated location",
                    "website": "salvationarmy.org.au/melbourne614",
                    "suburb": "Melbourne"

                }
            },
            {
                "type": "Feature",
                "geometry": {
                    "type": "Point",
                    "coordinates": [144.986299, -37.806427]
                },
                "properties": {
                    "phoneFormatted": "(+61) 9244 3333",
                    "phone": "9244 3333",
                    "address": "Aboriginal Family Violence Prevention and Legal Service Victoria",
                    "crossStreet": "70-80 Wellington Street",
                    "website": "fvpls.org",
                    "suburb": "Collingwood"

                }
            },
            {
                "type": "Feature",
                "geometry": {
                    "type": "Point",
                    "coordinates": [144.96417, -37.815731]
                },
                "properties": {
                    "phoneFormatted": "(+61) 9660 4700",
                    "phone": "9660 4700 ",
                    "address": "Action Centre",
                    "crossStreet": "92-94 Elizabeth Street",
                    "website": "fpv.org.au",
                    "suburb": "Melbourne"
                }
            },
            {
                "type": "Feature",
                "geometry": {
                    "type": "Point",
                    "coordinates": [144.948507, -37.795439]
                },
                "properties": {
                    "phoneFormatted": "(+61) 9329 5100",
                    "phone": "9329 5100 ",
                    "address": "Adult Outreach Support Services",
                    "crossStreet": "179 Flemington Road",
                    "website": "vincentcare.org.au",
                    "suburb": "North Melbourne"
                }
            },
            {
                "type": "Feature",
                "geometry": {
                    "type": "Point",
                    "coordinates": [144.961614, -37.817738]
                },
                "properties": {
                    "phoneFormatted": "(+61) 1300 252 666",
                    "phone": "1300 252 666",
                    "address": "AL–ANON Family Groups",
                    "crossStreet": "51 Queen Street",
                    "website": "al-anon.alateen.org/australia/",
                    "suburb": "Melbourne"
                }
            },
            {
                "type": "Feature",
                "geometry": {
                    "type": "Point",
                    "coordinates": [145.000307, -37.811648]
                },
                "properties": {
                    "phoneFormatted": "(+61) 9429 1833",
                    "phone": "9429 1833",
                    "address": "Alcoholics Anonymous Victoria",
                    "crossStreet": "36 Church Street",
                    "website": "aavictoria.org.au",
                    "suburb": "Richmond"
                }
            },
            {
                "type": "Feature",
                "geometry": {
                    "type": "Point",
                    "coordinates": [144.975486, -37.80991]
                },
                "properties": {
                    "phoneFormatted": "(+61) 9419 3288",
                    "phone": "9419 3288",
                    "address": "Anglicare Victoria – Lazarus Centre",
                    "crossStreet": "15 Gisborne Street",
                    "website": "anglicarevic.org.au",
                    "suburb": "East Melbourne"
                }
            },
            {
                "type": "Feature",
                "geometry": {
                    "type": "Point",
                    "coordinates": [144.929074, -37.795025]
                },
                "properties": {
                    "phoneFormatted": "(+61) 8378 1600",
                    "phone": "8378 1600",
                    "address": "COHEALTH",
                    "crossStreet": "12 Gower Street",
                    "website": "cohealth.org.au",
                    "suburb": "Kensington"
                }
            },
            {
                "type": "Feature",
                "geometry": {
                    "type": "Point",
                    "coordinates": [144.977265, -37.805286]
                },
                "properties": {
                    "phoneFormatted": "(+61) 1300 147 147",
                    "phone": "1300 147 147",
                    "address": "Brotherhood of St Laurence Coolibah Centre",
                    "crossStreet": "67A Brunswick Street",
                    "website": "bsl.org.au/services/older-people/day-and-respite-services/the-coolibah-centre/",
                    "suburb": "Fitzroy"
                }
            },
            {
                "type": "Feature",
                "geometry": {
                    "type": "Point",
                    "coordinates": [144.949896, -37.806306]
                },
                "properties": {
                    "phoneFormatted": "(+61) 9329 4800",
                    "phone": "9329 4800",
                    "address": "Flagstaff Crisis Accommodation",
                    "crossStreet": "Corner King and Roden Streets",
                    "website": "salvationarmy.org.au",
                    "suburb": "West Melbourne"
                }
            },
            {
                "type": "Feature",
                "geometry": {
                    "type": "Point",
                    "coordinates": [144.956268, -37.827398]
                },
                "properties": {
                    "phoneFormatted": "(+61) 9699 4566",
                    "phone": "9699 4566",
                    "address": "Hanover Southbank",
                    "crossStreet": "52 Haig Street",
                    "website": "hanover.org.au",
                    "suburb": "South Melbourne"
                }
            },
            {
                "type": "Feature",
                "geometry": {
                    "type": "Point",
                    "coordinates": [144.896575, -37.799989]
                },
                "properties": {
                    "phoneFormatted": "",
                    "phone": "",
                    "address": "Justice Connect Homeless Law",
                    "crossStreet": "229 Barkly Street",
                    "website": "justiceconnect.org.au",
                    "suburb": "Footscray"
                }
            },
            {
                "type": "Feature",
                "geometry": {
                    "type": "Point",
                    "coordinates": [144.969029, -37.816297]
                },
                "properties": {
                    "phoneFormatted": "(+61) 9945 2100",
                    "phone": "9945 2100",
                    "address": "Living Room Primary Health Service",
                    "crossStreet": "7-9 Hosier Lane",
                    "website": "youthprojects.org.au",
                    "suburb": "Melbourne"

                }
            },
            {
                "type": "Feature",
                "geometry": {
                    "type": "Point",
                    "coordinates": [144.949629, -37.795588]
                },
                "properties": {
                    "phoneFormatted": "(+61) 9269 6868",
                    "phone": "9269 6868",
                    "address": "McAuley Community Services for Women - McAuley House Program",
                    "crossStreet": "149 Flemington Road",
                    "website": "mcauleycsw.org.au",
                    "suburb": "North Melbourne"

                }
            },
            {
                "type": "Feature",
                "geometry": {
                    "type": "Point",
                    "coordinates": [144.963837, -37.803078]
                },
                "properties": {
                    "phoneFormatted": "(+61) 9341 6200",
                    "phone": "9341 6200",
                    "address": "Melbourne Sexual Health Centre",
                    "crossStreet": "580 Swanston Street",
                    "website": "mshc.org.au",
                    "suburb": "Carlton"

                }
            },
            {
                "type": "Feature",
                "geometry": {
                    "type": "Point",
                    "coordinates": [144.980758, -37.807263]
                },
                "properties": {
                    "phoneFormatted": "(+61) 9419 4874",
                    "phone": "9419 4874",
                    "address": "Quin House",
                    "crossStreet": "38-40 George Street",
                    "website": "vincentcare.org.au",
                    "suburb": "Fitzroy"

                }
            },
            {
                "type": "Feature",
                "geometry": {
                    "type": "Point",
                    "coordinates": [144.950825, -37.808981]
                },
                "properties": {
                    "phoneFormatted": "(+61) 1300 334 455",
                    "phone": "1300 334 455",
                    "address": "RDNS Homeless Person’s Program",
                    "crossStreet": "113 Rosslyn Street",
                    "website": "rdns.com.au",
                    "suburb": "West Melbourne"

                }
            },
            {
                "type": "Feature",
                "geometry": {
                    "type": "Point",
                    "coordinates": [144.956177, -37.798877]
                },
                "properties": {
                    "phoneFormatted": "(+61) 9342 7000",
                    "phone": "9342 7000",
                    "address": "Royal Melbourne Hospital",
                    "crossStreet": "300 Grattan Street",
                    "website": "rmh.mh.org.au",
                    "suburb": "Parkville"

                }
            },
            {
                "type": "Feature",
                "geometry": {
                    "type": "Point",
                    "coordinates": [144.979787, -37.863011]
                },
                "properties": {
                    "phoneFormatted": "(+61) 9537 1166",
                    "phone": "9537 1166",
                    "address": "Sacred Heart Mission",
                    "crossStreet": "87 Grey Street",
                    "website": "sacredheartmission.org",
                    "suburb": "St Kilda"

                }
            },
            {
                "type": "Feature",
                "geometry": {
                    "type": "Point",
                    "coordinates": [144.939884, -37.790064]
                },
                "properties": {
                    "phoneFormatted": "(+61) 1300 334 455",
                    "phone": "1300 334 455",
                    "address": "Salvation Army Open Door",
                    "crossStreet": "166 Boundary Road",
                    "website": "salvationarmy.org.au/adultservices",
                    "suburb": "North Melbourne"

                }
            },
            {
                "type": "Feature",
                "geometry": {
                    "type": "Point",
                    "coordinates": [144.962472, -37.811735]
                },
                "properties": {
                    "phoneFormatted": "(+61) 9663 2495",
                    "phone": "9663 2495",
                    "address": "St. Francis Pastoral Centre",
                    "crossStreet": "326 Lonsdale Street",
                    "website": "stfrancismelbourne.org.au",
                    "suburb": "Melbourne"
                }
            },
            {
                "type": "Feature",
                "geometry": {
                    "type": "Point",
                    "coordinates": [144.97746, -37.802492]
                },
                "properties": {
                    "phoneFormatted": "(+61) 9417 6497",
                    "phone": "9417 6497",
                    "address": "St. Mary’s House of Welcome",
                    "crossStreet": "165-169 Brunswick Street",
                    "website": "smhow.org.au",
                    "suburb": "Fitzroy"

                }
            },
            {
                "type": "Feature",
                "geometry": {
                    "type": "Point",
                    "coordinates": [144.967936, -37.804233]
                },
                "properties": {
                    "phoneFormatted": "(+61) 9663 6733",
                    "phone": "9663 6733",
                    "address": "The Drum Youth Services",
                    "crossStreet": "100 Drummond Street",
                    "website": "ds.org.au",
                    "suburb": "Carlton"

                }
            },
            {
                "type": "Feature",
                "geometry": {
                    "type": "Point",
                    "coordinates": [145.002669, -37.743764]
                },
                "properties": {
                    "phoneFormatted": "(+61) 9418 5999",
                    "phone": "9418 5999",
                    "address": "Victorian Aboriginal Legal Service",
                    "crossStreet": "273 High Street",
                    "website": "vals.org.au",
                    "suburb": "Preston"

                }
            }
        ]
    };

    /**
     * Assign a unique id to each store. You'll use this `id`
     * later to associate each point on the map with a listing
     * in the sidebar.
    */
    stores.features.forEach(function (store, i) {
        store.properties.id = i;
    });

    /**
     * Wait until the map loads to make changes to the map.
    */
    map.on('load', function (e) {
        /**
         * This is where your '.addLayer()' used to be, instead
         * add only the source without styling a layer
        */
        map.addSource("places", {
            "type": "geojson",
            "data": stores
        });

        /**
         * Create a new MapboxGeocoder instance.
        */
        var geocoder = new MapboxGeocoder({
            accessToken: mapboxgl.accessToken,
            mapboxgl: mapboxgl,
            marker: true,
            bbox: [144.5747, -37.81361, 144.96306, -37.4849]
        });

        /**
         * Add all the things to the page:
         * - The location listings on the side of the page
         * - The search box (MapboxGeocoder) onto the map
         * - The markers onto the map
        */
        buildLocationList(stores);
        map.addControl(geocoder, 'top-left');
        addMarkers();

        /**
         * Listen for when a geocoder result is returned. When one is returned:
         * - Calculate distances
         * - Sort stores by distance
         * - Rebuild the listings
         * - Adjust the map camera
         * - Open a popup for the closest store
         * - Highlight the listing for the closest store.
        */
        geocoder.on('result', function (ev) {

            /* Get the coordinate of the search result */
            var searchResult = ev.result.geometry;

            /**
             * Calculate distances:
             * For each store, use turf.disance to calculate the distance
             * in miles between the searchResult and the store. Assign the
             * calculated value to a property called `distance`.
            */
            var options = { units: 'miles' };
            stores.features.forEach(function (store) {
                Object.defineProperty(store.properties, 'distance', {
                    value: turf.distance(searchResult, store.geometry, options),
                    writable: true,
                    enumerable: true,
                    configurable: true
                });
            });

            /**
             * Sort stores by distance from closest to the `searchResult`
             * to furthest.
            */
            stores.features.sort(function (a, b) {
                if (a.properties.distance > b.properties.distance) {
                    return 1;
                }
                if (a.properties.distance < b.properties.distance) {
                    return -1;
                }
                return 0; // a must be equal to b
            });

            /**
             * Rebuild the listings:
             * Remove the existing listings and build the location
             * list again using the newly sorted stores.
            */
            var listings = document.getElementById('listings');
            while (listings.firstChild) {
                listings.removeChild(listings.firstChild);
            }
            buildLocationList(stores);

            /* Open a popup for the closest store. */
            createPopUp(stores.features[0]);

            /** Highlight the listing for the closest store. */
            var activeListing = document.getElementById('listing-' + stores.features[0].properties.id);
            activeListing.classList.add('active');

            /**
             * Adjust the map camera:
             * Get a bbox that contains both the geocoder result and
             * the closest store. Fit the bounds to that bbox.
            */
            var bbox = getBbox(stores, 0, searchResult);
            map.fitBounds(bbox, {
                padding: 100
            });
        });
    });

    /**
     * Using the coordinates (lng, lat) for
     * (1) the search result and
     * (2) the closest store
     * construct a bbox that will contain both points
    */
    function getBbox(sortedStores, storeIdentifier, searchResult) {
        var lats = [sortedStores.features[storeIdentifier].geometry.coordinates[1], searchResult.coordinates[1]]
        var lons = [sortedStores.features[storeIdentifier].geometry.coordinates[0], searchResult.coordinates[0]]
        var sortedLons = lons.sort(function (a, b) {
            if (a > b) { return 1; }
            if (a.distance < b.distance) { return -1; }
            return 0;
        });
        var sortedLats = lats.sort(function (a, b) {
            if (a > b) { return 1; }
            if (a.distance < b.distance) { return -1; }
            return 0;
        });
        return [
            [sortedLons[0], sortedLats[0]],
            [sortedLons[1], sortedLats[1]]
        ];
    }

    /**
     * Add a marker to the map for every store listing.
    **/
    function addMarkers() {
        /* For each feature in the GeoJSON object above: */
        stores.features.forEach(function (marker) {
            /* Create a div element for the marker. */
            var el = document.createElement('div');
            /* Assign a unique `id` to the marker. */
            el.id = "marker-" + marker.properties.id;
            /* Assign the `marker` class to each marker for styling. */
            el.className = 'marker';

            /**
             * Create a marker using the div element
             * defined above and add it to the map.
            **/
            new mapboxgl.Marker(el, { offset: [0, -23] })
                .setLngLat(marker.geometry.coordinates)
                .addTo(map);

            /**
             * Listen to the element and when it is clicked, do three things:
             * 1. Fly to the point
             * 2. Close all other popups and display popup for clicked store
             * 3. Highlight listing in sidebar (and remove highlight for all other listings)
            **/
            el.addEventListener('click', function (e) {
                flyToStore(marker);
                createPopUp(marker);
                var activeItem = document.getElementsByClassName('active');
                e.stopPropagation();
                if (activeItem[0]) {
                    activeItem[0].classList.remove('active');
                }
                var listing = document.getElementById('listing-' + marker.properties.id);
                listing.classList.add('active');
            });
        });
    }

    /**
     * Add a listing for each store to the sidebar.
    **/
    function buildLocationList(data) {
        data.features.forEach(function (store, i) {
            /**
             * Create a shortcut for `store.properties`,
             * which will be used several times below.
            **/
            var prop = store.properties;

            /* Add a new listing section to the sidebar. */
            var listings = document.getElementById('listings');
            var listing = listings.appendChild(document.createElement('div'));
            /* Assign a unique `id` to the listing. */
            listing.id = "listing-" + prop.id;
            /* Assign the `item` class to each listing for styling. */
            listing.className = 'item';

            /* Add the link to the individual listing created above. */
            var link = listing.appendChild(document.createElement('a'));
            link.href = '#';
            link.className = 'title';
            link.id = "link-" + prop.id;
            link.innerHTML = prop.address;

            /* Add details to the individual listing. */
            var details = listing.appendChild(document.createElement('div'));
            details.innerHTML = prop.suburb;
            if (prop.phone) {
                details.innerHTML += '<br />Phone: ' + prop.phoneFormatted;
            }
            details.innerHTML += '<br /><a href= "http://' + prop.website + '" target = "_blank">' + prop.website + '</a>'
            if (prop.distance) {
                var roundedDistance = Math.round(prop.distance * 100) / 100;
                details.innerHTML += '<br /><strong>' + roundedDistance + ' miles away</strong>';
            }

            /**
             * Listen to the element and when it is clicked, do four things:
             * 1. Update the `currentFeature` to the store associated with the clicked link
             * 2. Fly to the point
             * 3. Close all other popups and display popup for clicked store
             * 4. Highlight listing in sidebar (and remove highlight for all other listings)
            **/
            link.addEventListener('click', function (e) {
                for (var i = 0; i < data.features.length; i++) {
                    if (this.id === "link-" + data.features[i].properties.id) {
                        var clickedListing = data.features[i];
                        flyToStore(clickedListing);
                        createPopUp(clickedListing);
                    }
                }
                var activeItem = document.getElementsByClassName('active');
                if (activeItem[0]) {
                    activeItem[0].classList.remove('active');
                }
                this.parentNode.classList.add('active');
            });
        });
    }

    /**
     * Use Mapbox GL JS's `flyTo` to move the camera smoothly
     * a given center point.
    **/
    function flyToStore(currentFeature) {
        map.flyTo({
            center: currentFeature.geometry.coordinates,
            zoom: 15
        });
    }

    /**
     * Create a Mapbox GL JS `Popup`.
    **/
    function createPopUp(currentFeature) {
        var popUps = document.getElementsByClassName('mapboxgl-popup');
        if (popUps[0]) popUps[0].remove();

        var popup = new mapboxgl.Popup({ closeOnClick: false })
            .setLngLat(currentFeature.geometry.coordinates)
            .setHTML('<h3>' + currentFeature.properties.address + '</h3>' +
                '<h4>' + currentFeature.properties.crossStreet + '</h4>' + '<h4><b>' + currentFeature.properties.phoneFormatted + '</b></h4>')
            .addTo(map);
    }

</script>

